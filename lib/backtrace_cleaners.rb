# Tools to remove random noise from backtraces
# This helps Sentry aggregate errors better
module BacktraceCleaners
    class << self
        def clean_line(line)
            clean_path(clean_method(line))
        end

        def clean_path(path)
            # Timestamp generated by Capistrano
            path.sub %r[/releases/\d{8,}/], '/current/'
        end

        def clean_method(name)
            name = name.dup

            # Random number in HAML generated method names
            name.sub! %r[haml__\d+_\d+], 'haml__'

            # Random numbers in ActiveModel compiled callbacks
            name.sub! %r[_run__\d+__(\w+)__\d+__callbacks] do |match|
                "_run__#{$1}__callbacks"
            end

            name
        end

        def clean_raven_event(event)
            if ex = event.interface(:exception)
                ex.values.each do |si|
                    si.stacktrace.frames.each do |frame|
                        frame.function = clean_method(frame.function)
                        frame.abs_path = clean_path(frame.abs_path)
                    end
                end
            end
        end
    end
end
